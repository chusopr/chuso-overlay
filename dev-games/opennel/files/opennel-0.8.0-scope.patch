--- code/nel/include/nel/3d/track_tcb.h	2019-01-13 22:07:49.938079414 +0100
+++ code/nel/include/nel/3d/track_tcb.h	2019-01-13 22:28:34.572621469 +0100
@@ -218,7 +218,7 @@
 			date*= previous->OODeltaTime;
 			NLMISC::clamp(date, 0,1);
 
-			date = ease(previous, date);
+			date = this->ease(previous, date);
 
 			float hb[4];
 			this->computeHermiteBasis(date, hb);
@@ -242,7 +242,7 @@
 		ITrackKeyFramer<CKeyT>::compile();
 
 		// Ease Precompute.
-		compileTCBEase(this->_MapKey, this->getLoopMode());
+		this->compileTCBEase(this->_MapKey, this->getLoopMode());
 
 
 		// Tangents Precompute.
@@ -314,7 +314,7 @@
 		float	ksm,ksp,kdm,kdp;
 
 		// compute tangents factors.
-		computeTCBFactors(key, timeBefore, time, timeAfter, rangeDelta, firstKey, endKey, isLoop, ksm,ksp,kdm,kdp);
+		this->computeTCBFactors(key, timeBefore, time, timeAfter, rangeDelta, firstKey, endKey, isLoop, ksm,ksp,kdm,kdp);
 
 		// Delta.
 		TKeyValueType	delm, delp;
@@ -391,7 +391,7 @@
 			NLMISC::clamp(date, 0,1);
 
 			// ease.
-			date = ease(previous, date);
+			date = this->ease(previous, date);
 
 			// quad slerp.
 			resultVal.Value= CQuat::squadrev(next->LocalAngleAxis, previous->Quat, previous->A, next->B, next->Quat, date);
@@ -413,7 +413,7 @@
 		ITrackKeyFramer<CKeyTCBQuat>::compile();
 
 		// Ease Precompute.
-		compileTCBEase(_MapKey, getLoopMode());
+		this->compileTCBEase(_MapKey, getLoopMode());
 
 		TMapTimeCKey::iterator	it;
 		TMapTimeCKey::iterator	itNext;
@@ -548,7 +548,7 @@
 
 		// compute tangents factors.
 		float	ksm, ksp, kdm, kdp;
-		computeTCBFactors(key, timeBefore, time, timeAfter, rangeDelta, firstKey, endKey, isLoop, ksm,ksp,kdm,kdp);
+		this->computeTCBFactors(key, timeBefore, time, timeAfter, rangeDelta, firstKey, endKey, isLoop, ksm,ksp,kdm,kdp);
 
 
 		// A/B.
--- code/ryzom/common/src/game_share/mirror_prop_value_inline.h	2019-01-13 22:44:06.663326877 +0100
+++ code/ryzom/common/src/game_share/mirror_prop_value_inline.h	2019-01-13 22:44:24.353522224 +0100
@@ -628,7 +628,7 @@
 	{
 		T temp;
 		s.serial( temp );
-		tempReassign( temp );
+		this->tempReassign( temp );
 	}
 	else
 	{
@@ -937,7 +937,7 @@
 	}
 	else
 	{
-		tempReassign( srcValue );
+		this->tempReassign( srcValue );
 	}
 	return *this;
 }
--- code/nel/include/nel/3d/static_quad_grid.h	2019-01-13 23:04:34.497766120 +0100
+++ code/nel/include/nel/3d/static_quad_grid.h	2019-01-13 23:03:58.497347410 +0100
@@ -172,7 +172,7 @@
 void			CStaticQuadGrid<T>::build(CQuadGrid<T> &quadGrid)
 {
 	clear();
-	contReset(_Grid);
+	NLMISC::contReset(_Grid);
 
 	// Copy from quadGrid, and init quads
 	_Size= quadGrid.getSize();
--- code/nel/include/nel/3d/cube_grid.h	2019-01-13 23:02:51.666566767 +0100
+++ code/nel/include/nel/3d/cube_grid.h	2019-01-13 23:03:38.177110532 +0100
@@ -227,7 +227,7 @@
 		// build the _StaticGrid
 		_StaticGrids[i].build(_Grids[i]);
 		// And reset the grid. contReset is necessary to clean the CBlockMemory.
-		contReset(_Grids[i]);
+		NLMISC::contReset(_Grids[i]);
 	}
 
 	// done
