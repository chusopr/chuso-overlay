--- code/nel/include/nel/misc/types_nl.h	2019-04-12 21:55:36.871531145 +0200
+++ code/nel/include/nel/misc/types_nl.h	2019-04-12 21:56:08.661912115 +0200
@@ -383,8 +383,8 @@
 #define NL_DEFAULT_MEMORY_ALIGNMENT 16
 #define NL_ALIGN_SSE2 NL_ALIGN(NL_DEFAULT_MEMORY_ALIGNMENT)
 
-extern void *operator new(size_t size) throw(std::bad_alloc);
-extern void *operator new[](size_t size) throw(std::bad_alloc);
+extern void *operator new(size_t size);
+extern void *operator new[](size_t size);
 extern void operator delete(void *p) throw();
 extern void operator delete[](void *p) throw();
 
--- code/nel/src/misc/common.cpp	2019-04-12 21:55:45.271631827 +0200
+++ code/nel/src/misc/common.cpp	2019-04-12 21:56:54.982466900 +0200
@@ -74,14 +74,14 @@
 
 #ifdef NL_HAS_SSE2
 
-void *operator new(size_t size) throw(std::bad_alloc)
+void *operator new(size_t size)
 {
 	void *p = aligned_malloc(size, NL_DEFAULT_MEMORY_ALIGNMENT);
 	if (p == NULL) throw std::bad_alloc();
 	return p;
 }
 
-void *operator new[](size_t size) throw(std::bad_alloc)
+void *operator new[](size_t size)
 {
 	void *p = aligned_malloc(size, NL_DEFAULT_MEMORY_ALIGNMENT);
 	if (p == NULL) throw std::bad_alloc();
